{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction UserApi(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isNameUser, setIsNameUser] = useState('');\n  const [isNameUserAvatar, setIsNameUserAvatar] = useState('');\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/usuario/infor', {\n            headers: {\n              Autorizacion: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setIsNameUser(res.data.nombre);\n          setIsNameUserAvatar(res.data.nombre.charAt(0));\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    isNameUser: [isNameUser, setIsNameUser],\n    isNameUserAvatar: [isNameUserAvatar, setIsNameUserAvatar]\n  };\n}\n\n_s(UserApi, \"2FqPN37fErcYp+q4BsfuLjTLbnU=\");\n\n_c = UserApi;\nexport default UserApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserApi\");","map":{"version":3,"sources":["C:/Users/Hello/Documents/ProyectTemplate/LADLOLA/client/src/api/UserApi.js"],"names":["React","useEffect","useState","axios","UserApi","token","isLogged","setIsLogged","isAdmin","setIsAdmin","isNameUser","setIsNameUser","isNameUserAvatar","setIsNameUserAvatar","getUser","res","get","headers","Autorizacion","data","role","nombre","charAt","err","alert","response","msg"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,KAAH,EAAS;AACL,YAAMS,OAAO,GAAG,YAAW;AACvB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,gBAAV,EAA4B;AAC1CC,YAAAA,OAAO,EAAE;AAACC,cAAAA,YAAY,EAAEb;AAAf;AADiC,WAA5B,CAAlB;AAGAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBX,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAE,KAAF,CAAnD;AACAE,UAAAA,aAAa,CAACI,GAAG,CAACI,IAAJ,CAASE,MAAV,CAAb;AACAR,UAAAA,mBAAmB,CAACE,GAAG,CAACI,IAAJ,CAASE,MAAT,CAAgBC,MAAhB,CAAuB,CAAvB,CAAD,CAAnB;AACH,SARD,CAQE,OAAOC,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,GAAnB,CAAL;AACH;AACJ,OAZD;;AAaAZ,MAAAA,OAAO;AACV;AAEJ,GAlBQ,EAkBN,CAACT,KAAD,CAlBM,CAAT;AAoBA,SAAO;AACJC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADN;AAEJC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFL;AAGJC,IAAAA,UAAU,EAAE,CAACA,UAAD,EAAaC,aAAb,CAHR;AAIJC,IAAAA,gBAAgB,EAAE,CAACA,gBAAD,EAAmBC,mBAAnB;AAJd,GAAP;AAMH;;GAhCQT,O;;KAAAA,O;AAkCT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserApi(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [isNameUser, setIsNameUser] = useState('')\r\n    const [isNameUserAvatar, setIsNameUserAvatar] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n            const getUser = async () =>{\r\n                try {\r\n                    const res = await axios.get('/usuario/infor', {\r\n                        headers: {Autorizacion: token}\r\n                    })\r\n                    setIsLogged(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin (false)\r\n                    setIsNameUser(res.data.nombre)\r\n                    setIsNameUserAvatar(res.data.nombre.charAt(0))\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n            getUser()\r\n        }\r\n       \r\n    }, [token])\r\n\r\n    return {\r\n       isLogged: [isLogged, setIsLogged],\r\n       isAdmin: [isAdmin, setIsAdmin],\r\n       isNameUser: [isNameUser, setIsNameUser],\r\n       isNameUserAvatar: [isNameUserAvatar, setIsNameUserAvatar]\r\n    }\r\n}\r\n\r\nexport default UserApi\r\n"]},"metadata":{},"sourceType":"module"}